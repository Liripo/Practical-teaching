html
memory.size(html)
html %>% html_table()
html %>% html_nodes(".querybox")
html %>% html_nodes(".querybox") %>% html_text()
#连接浏览器
remDr <- remoteDriver(
browserName = "chrome",
remoteServerAddr = "localhost",
port = 4444L)
remDr$open()
url <- "https://biit.cs.ut.ee/gplink/l/1WPg5kkuQq"
remDr$navigate(url)
remDr$findElement(using = 'class', value = ".querybox")
remDr$findElement(using = 'css selector', value = ".querybox")
l <- remDr$findElement(using = 'css selector', value = ".querybox")
l
xpath <- "/html/body/div/div/div/div[2]/div[3]/div/div/div[1]/div[2]/div[2]/div[1]/div/button[1]"
l <- remDr$findElement(using = 'xpath', value = xpath)
xpath <- "/html/body/div/div/div/div[2]/div[3]/div/div/div[1]/div[2]/div[2]/div[1]/div/button[1]"
l <- remDr$findElement(using = 'xpath',value = xpath)
x <- remDr$findElement(using = "css selector",value = ".active+ .tab-button a")
remDr$mouseMoveToLocation(webElement=x)
remDr$click()
l <- remDr$findElement(using = 'xpath',value = xpath)
xpath <- "/html/body/div/div/div/div[3]/div[3]/div/div/div[1]/div[2]/div[2]/div[1]/div/button[1]"
l <- remDr$findElement(using = 'xpath',value = xpath)
l
remDr$mouseMoveToLocation(webElement=l)
remDr$click()
remDr$buttondown
?fs::dir_ls
file <- fs::dir_ls("D:\\谷歌浏览器下载",type = "file",regexp = "gProfiler_hsapiens.+csv$")
file
#连接浏览器
remDr <- remoteDriver(
browserName = "chrome",
remoteServerAddr = "localhost",
port = 4444L)
remDr$open()
url <- "https://biit.cs.ut.ee/gplink/l/1WPg5kkuQq"
remDr$navigate(url)
x <- remDr$findElement(using = "css selector",value = ".active+ .tab-button a")
remDr$mouseMoveToLocation(webElement=x)
remDr$click()
xpath <- "/html/body/div/div/div/div[3]/div[3]/div/div/div[1]/div[2]/div[2]/div[1]/div/button[1]"
l <- remDr$findElement(using = 'xpath',value = xpath)
remDr$mouseMoveToLocation(webElement=l)
remDr$click()
file <- fs::dir_ls("C:\\Users\\Liripo\\Downloads",
type = "file",regexp = "gProfiler_hsapiens.+csv$")
file
library(fs)
?file_copy()
file_copy(path = file,new_path = "G:/liripo/Rwork/20200622-clusterresult")
file_move(path = file,new_path = "G:/liripo/Rwork/20200622-clusterresult")
?file_move()
file
file_move(path = file,new_path = "G:/liripo/Rwork/20200622-clusterresult/gprofiler.csv")
library(tidyverse)
txt <- read_delim("C:\\Users\\Liripo\\Desktop\\工作簿1.txt",delim = "\t",col_names = F)
txt <- read_delim("C:\\Users\\Liripo\\Desktop\\工作簿1.txt",delim = " ",col_names = F)
txt
txt <- read_delim("C:\\Users\\Liripo\\Desktop\\工作簿1.txt",delim = " |\t",col_names = F)
txt
txt <- read_delim("C:\\Users\\Liripo\\Desktop\\工作簿1.txt",delim = "\t",col_names = F)
txt
txt %>% separate(X2,sep = " ",into = c("row","cluster","url"))
txt %>% separate(X2,sep = " ",into = c("row","cluster","url"))->txt
tmp <- txt %>% filter(url == url)
tmp
url
tmp <- txt %>% filter(url == url)
tmp
txt
tmp <- txt %>% filter(url == all_of(url))
tmp
tmp <- txt %>% filter(url == "https://biit.cs.ut.ee/gplink/l/1WPg5kkuQq")
tmp
mtcars %>% filter(mpg == mpg)
mtcars %>% filter(mpg == !!mpg)
txt
txt %>% rename(url = url2)
txt %>% rename(url2 = url)
txt %>% rename(url2 = url)->txt
tmp <- txt %>% filter(url2 == url)
tmp
tmp[[1]]
#文件重命名
filename <- paste0(tmp[[1]],tmp[[3]])
#文件重命名
filename <- paste(tmp[[1]],tmp[[3]],"gprofiler",collapse = "-")
filename
#文件重命名
filename <- paste(tmp[[1]],tmp[[3]],"gprofiler",sep = "-")
filename
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL",
dataset = "hsapiens_gene_ensembl")
library(biomaRt)
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL",
dataset = "hsapiens_gene_ensembl")
affyids <- c("202763_at","209310_s_at","207500_at")
getBM(attributes = c('affy_hg_u133_plus_2', 'entrezgene_id'),
filters = 'affy_hg_u133_plus_2',
values = affyids,
mart = ensembl)
ensembl
?useEnsembl
keytypes(ensembl)
entrez=c("673","7157","837")
getSequence(id = entrez,
type="entrezgene_id",
seqType="coding_gene_flank",
upstream=100,
mart=ensembl)
ensembl@dataset
ensembl@biomart
ensembl@filters
ensembl %>% str()
library(tidyverse)
ensembl %>% str()
devtools::install_github("houyunhuang/ggcor")
devtools::install_github("houyunhuang/ggcor")
devtools::install_github("houyunhuang/ggcor")
library(tidyverse)
library(grid)
library(gridExtra)
convertX(x)
convertX(0.5)
x <- 0.5
xv <- convertX(x, position.units, TRUE)
starGrob <- function(gp = gpar(fill="black",
fontsize=2,
alpha=1,
col=NA,
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
tplxy <- do.call("rbind", plxy)
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(tplxy[,1]+0.5, tplxy[,2]+0.5, id.lengths=c(6,6),
gp=gp,
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc"))
}
grid.draw(starGrob())
starGrob <- function(gp = gpar(fill="black",
fontsize=2,
alpha=1,
col=NA,
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5, id.lengths=c(6,6),
gp=gp,
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc"))
}
grid.draw(starGrob())
starGrob <- function(gp = gpar(fill=NA,
fontsize=2,
alpha=1,
col=NA,
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5, id.lengths=c(6,6),
gp=gp,
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc"))
}
grid.draw(starGrob())
library(gridExtra)
#计算两个正五边形的坐标，其中一个旋转了pi/5度。
plxy <- mapply(polygon_regular, n=c(5, 5), phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
#将第二个进行缩放
plxy[[2]] <- 0.38 * plxy[[2]]
#将这两个正五边形坐标进行合并。
tplxy <- do.call("rbind", plxy)
#对两个正五边形的顶点坐标做个重新排序
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)}, plxy[[1]], plxy[[2]]))
library(grid)
#gpar来控制图形参数，包括线条形状，颜色等等
grid.draw(polygonGrob(tplxy[,1]+0.5, tplxy[,2]+0.5, id.lengths=c(6,6),
gp=gpar(fill=NA, col=c("red", "blue")),
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc")))
grid.draw(polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5, gp=gpar(fill=NA, col="black", lwd=2.5, lty=2),
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = "center", default.units="npc")))
grid.newpage()
starGrob <- function(gp = gpar(fill=NA,
fontsize=2,
alpha=1,
col=NA,
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5, id.lengths=c(6,6),
gp=gp,
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc"))
}
grid.draw(starGrob())
starGrob <- function(gp = gpar(fill=NA,
fontsize=2,
alpha=1,
col="black",
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5, id.lengths=c(6,6),
gp=gp,
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc"))
}
grid.draw(starGrob())
grid.newpage()
grid.draw(starGrob())
library(gridExtra)
#计算两个正五边形的坐标，其中一个旋转了pi/5度。
plxy <- mapply(polygon_regular, n=c(5, 5), phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
#将第二个进行缩放
plxy[[2]] <- 0.38 * plxy[[2]]
#将这两个正五边形坐标进行合并。
tplxy <- do.call("rbind", plxy)
#对两个正五边形的顶点坐标做个重新排序
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)}, plxy[[1]], plxy[[2]]))
library(grid)
#gpar来控制图形参数，包括线条形状，颜色等等
grid.newpage()
grid.draw(polygonGrob(tplxy[,1]+0.5, tplxy[,2]+0.5, id.lengths=c(6,6),
gp=gpar(fill=NA, col=c("red", "blue")),
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc")))
grid.draw(polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5, gp=gpar(fill=NA, col="black", lwd=2.5, lty=2),
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = "center", default.units="npc")))
nplxy
grid.newpage()
starGrob <- function(gp = gpar(fill=NA,
fontsize=2,
alpha=1,
col="black",
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5,
gp=gp,
vp=viewport(x=0.5, y=0.5, width=0.2, height=0.2,
just = c("center", "center"), default.units="npc"))
}
grid.draw(starGrob())
starGrob <- function(vp = NULL,gp = gpar(fill=NA,
fontsize=2,
alpha=1,
col="black",
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5,
gp=gp,vp = vp)
}
starGrob <- function(vp = NULL,gp = gpar(fill=NA,
fontsize=2,
alpha=1,
col="black",
lwd=0.5)){
plxy <- mapply(polygon_regular, n=c(5, 5),
phase=c(0, 0 + pi/5), SIMPLIFY=FALSE)
plxy[[2]] <- 0.38 * plxy[[2]]
plxy <- lapply(plxy, function(x)data.frame(x))
nplxy <- as.matrix(mapply(function(x, y){rbind(x, y)},
plxy[[1]], plxy[[2]]))
grob <- polygonGrob(nplxy[,1]+0.5, nplxy[,2]+0.5,
gp=gp,vp = vp)
}
GeomStar <- ggproto("GeomStar", Geom,
draw_panel = function(data, panel_params, coord,slash="up") {
data <- coord$transform(data, panel_params)
data$size <- data$size/100
grobs <- lapply(1:nrow(data), function(i) {
vp <- viewport(x=data$x[i], y=data$y[i],
width=data$size[i], height=data$size[i],
angle = data$angle[i],
just = c("center", "center"),
default.units = "npc")
starGrob(vp=vp,
gp = gpar(fill = data$fill[i],
col = data$colour[i],
alpha = data$alpha[i]))
})
class(grobs) <- "gList"
ggplot2:::ggname("geom_star",gTree(children = grobs))
},
default_aes = aes(colour = NA,fill="red", size = 9, linetype = 1,
alpha = 1,angle=0,slash="up"),
required_aes = c("x", "y"),
draw_key = draw_key_blank
)
geom_star <- function(mapping = NULL,
data= NULL,
na.rm = FALSE,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
...){
layer(data = data,
mapping = mapping,
geom = GeomStar,
stat = stat,
position = position,
params = list(na.rm=na.rm, ...),
show.legend = show.legend,
inherit.aes = inherit.aes)
}
ggplot(mtcars)+geom_star(aes(x = mpg,y = hp))
ggplot(mtcars)+geom_point(aes(x = mpg,y = hp))
GeomStar <- ggproto("GeomStar", Geom,
draw_panel = function(data, panel_params, coord,slash="up") {
data <- coord$transform(data, panel_params)
data$size <- data$size/100
grobs <- lapply(1:nrow(data), function(i) {
vp <- viewport(x=data$x[i], y=data$y[i],
width=data$size[i], height=data$size[i],
angle = data$angle[i],
just = c("center", "center"),
default.units = "native")
starGrob(vp=vp,
gp = gpar(fill = data$fill[i],
col = data$colour[i],
alpha = data$alpha[i]))
})
class(grobs) <- "gList"
ggplot2:::ggname("geom_star",gTree(children = grobs))
},
default_aes = aes(colour = NA,fill="red", size = 9, linetype = 1,
alpha = 1,angle=0,slash="up"),
required_aes = c("x", "y"),
draw_key = draw_key_blank
)
geom_star <- function(mapping = NULL,
data= NULL,
na.rm = FALSE,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
...){
layer(data = data,
mapping = mapping,
geom = GeomStar,
stat = stat,
position = position,
params = list(na.rm=na.rm, ...),
show.legend = show.legend,
inherit.aes = inherit.aes)
}
ggplot(mtcars)+geom_star(aes(x = mpg,y = hp))
ggplot(mtcars)+ggstar::geom_star(aes(x = mpg,y = hp))
ggstar:::starGrob
ggstar::GeomStar
ggstar::GeomStar$draw_panel
ggplot2:GeomPoint
ggplot2::GeomPoint
ggplot2::GeomPoint$draw_panel
.pt
ggplot2::.pt
ggplot2:::.pt
ggplot2::.stroke
ggplot(mtcars)+ggforce::geom_circle(aes(x = mpg,y = hp))
ggplot(mtcars)+ggforce::geom_circle(aes(x0 = mpg,y0 = hp))
ggplot(mtcars)+ggforce::geom_circle(aes(x0 = mpg,y0 = hp,),r=0.5)
ggplot(mtcars)+ggforce::geom_circle(aes(x0 = mpg,y0 = hp,r = 0.5))
ggplot(mtcars)+ggforce::geom_circle(aes(x0 = mpg,y0 = hp,r = 5))
ggplot2:::GeomTile
ggplot2:::GeomTile$draw_panel
ggplot2:::GeomRaster$draw_panel
grid::rasterGrob
?shiny::tags$link()
??shiny::tags$link()
shiny::tags$link() %>% help()
remotes::install_github('JohnCoene/echarts4r.maps')
?new.env()
globalenv()
.GlobalEnv
f <- function() "top level function"
f
environment()
environment(f)
e <- new.env(parent = emptyenv())
e
assign(f,envir = e)
ls(envir = environment(stats::approxfun(1:2, 1:2, method = "const")))
assign("f",function(x){print(x)},envir = e)
remove(f)
f
ls(envir = e)
get(envir = e,"f")
e:::f
e::f
get(envir = e,"f") -> f
f
memory.size(f)
memory.size("f")
?memory.size
memory.size()
ggplot2:::`+.gg`()
ggplot2:::`+.gg`
glue::glue("aa")
glue::glue("aa{aa}",aa)
aa <- 1
glue::glue("aa{aa}",aa)
glue::glue("aa{a}",aa)
glue::glue("aa{aa}",aa)
aa <- "g"
glue::glue("aa{aa}",aa)
glue::glue("aa{}",aa)
?glue::glue
glue::glue("aa{aa}")
glue::glue("aa{{aa}}")
aa
aa[[1]]
{aa}
?fs::dir_ls
remotes::install_github("davidgohel/officedown")
library(officedown)
remotes::install_github("mlr-org/mlr3")
remotes::install_github("mlr-org/mlr3")
remotes::install_github("mlr-org/mlr3")
remotes::install_github("mlr-org/mlr3")
remotes::install_github("mlr-org/mlr3")
remotes::install_github("mlr-org/mlr3")
source('G:/liripo/R/Practical-teaching/app.R')
setwd("G:\\liripo\\R\\Practical-teaching")
source("R/global.R")
nCov2019::load_nCov2019()
covid_data <- nCov2019::load_nCov2019()
covid_data[]
covid_data <- nCov2019::get_nCov2019()
covid_data[]
covid_data$lang
?bs4DashControlbarItem
?bs4SidebarMenuItem
source('G:/liripo/R/Practical-teaching/app.R')
runApp()
?bs4DashNavbar
source('G:/liripo/R/Practical-teaching/app.R')
runApp()
?bs4SidebarHeader()
runApp()
runApp()
runApp()
runApp()
getNamespace("bs4Dash")
getNamespace("bs4Dash") %>% names()
getNamespace("bs4Dash") %>% names() %>% str_detect("Header")
getNamespace("bs4Dash") %>% names() %>% str_detect("Header") %>% which()
getNamespace("bs4Dash") %>% names() %>% str_match("Header")
getNamespace("bs4Dash") %>% names() %>% str_view_all("Header")
getNamespace("bs4Dash") %>% names() %>% str_view("Header")
getNamespace("bs4Dash") %>% names() %>% str_extract("Header")
getNamespace("bs4Dash") %>% names() %>% str_extract_all("Header")
getNamespace("bs4Dash") %>% names() %>% grep("Header")
?grep
getNamespace("bs4Dash") %>% names() %>% str_which("Header")
getNamespace("bs4Dash") %>% names() %>% .[76,87,139]
getNamespace("bs4Dash") %>% names() %>% .[c(76,87,139)]
?bs4DashSidebar()
?bs4DashNavbar
runApp()
runApp()
runApp()
shinydashboardPlus::shinydashboardPlusGallery()
install.packages("shinyjqui")
install.packages("shinyAce")
install.packages("styler")
runApp()
runApp()
runApp()
runApp()
runApp()
